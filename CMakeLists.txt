PROJECT(NIRAL_UTILITIES)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
CMAKE_POLICY(VERSION 2.8)

set(CMAKE_MODULE_PATH
  ${CMAKE_CURRENT_SOURCE_DIR}/CMake
  ${CMAKE_CURRENT_BINARY_DIR}/CMake
  ${CMAKE_MODULE_PATH}
  )

INCLUDE(CTest)
INCLUDE(FindITKUtil)
INCLUDE(FindVTKUtil)

IF(CMAKE_COMPILER_2005)
  ADD_DEFINITIONS(-D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE)
ENDIF(CMAKE_COMPILER_2005)

IF (${CMAKE_SOURCE_DIR} STREQUAL ${NIRAL_UTILITIES_SOURCE_DIR})
  SET (LIBRARY_OUTPUT_PATH ${NIRAL_UTILITIES_BINARY_DIR}/lib CACHE PATH "Single output directory for building all libraries.")
  SET (EXECUTABLE_OUTPUT_PATH ${NIRAL_UTILITIES_BINARY_DIR}/bin CACHE PATH "Single output directory for building all executables.")
ENDIF (${CMAKE_SOURCE_DIR} STREQUAL ${NIRAL_UTILITIES_SOURCE_DIR})

include_directories( Common )

OPTION(COMPILE_CORREVAL "Compile CorrespondenceEvaluator." OFF)
IF(COMPILE_CORREVAL)
  SUBDIRS(CorrespondenceEvaluator)
ENDIF(COMPILE_CORREVAL)

OPTION(COMPILE_IMAGEMATH "Compile ImageMath." ON)
IF(COMPILE_IMAGEMATH)
  SUBDIRS(ImageMath)
ENDIF(COMPILE_IMAGEMATH)

OPTION(COMPILE_IMAGESTAT "Compile ImageStat." OFF)
IF(COMPILE_IMAGESTAT)
  SUBDIRS(ImageStat)
ENDIF(COMPILE_IMAGESTAT)

OPTION(COMPILE_CROPTOOLS "Compile CropTools." ON)
IF(COMPILE_CROPTOOLS)
  SUBDIRS(CropTools)
ENDIF(COMPILE_CROPTOOLS)

OPTION(COMPILE_CONVERTITKFORMATS "Compile convertITKformats." OFF)
IF(COMPILE_CONVERTITKFORMATS)
  SUBDIRS(convertITKformats)
ENDIF(COMPILE_CONVERTITKFORMATS)

OPTION(COMPILE_DWI_NIFTINRRDCONVERSION "Compile DWI_NiftiNrrdConversion." ON)
IF(COMPILE_DWI_NIFTINRRDCONVERSION)
  SUBDIRS(DWI_NiftiNrrdConversion)
ENDIF(COMPILE_DWI_NIFTINRRDCONVERSION)

OPTION(COMPILE_POLYDATATRANSFORM "Compile PolydataTransform." ON)
IF(COMPILE_POLYDATATRANSFORM)
  SUBDIRS(PolydataTransform)
ENDIF(COMPILE_POLYDATATRANSFORM)

OPTION(COMPILE_TRANSFORMDEFORMATIONFIELD "Compile TransformDeformationField." OFF)
IF(COMPILE_TRANSFORMDEFORMATIONFIELD)
  SUBDIRS(TransformDeformationField)
ENDIF(COMPILE_TRANSFORMDEFORMATIONFIELD)

OPTION(COMPILE_POLYDATAMERGE "Compile PolydataMerge." ON)
IF(COMPILE_POLYDATAMERGE)
  SUBDIRS(PolydataMerge)
ENDIF(COMPILE_POLYDATAMERGE)

OPTION(COMPILE_CURVECOMPARE "Compile CurveCompare." OFF)
IF(COMPILE_CURVECOMPARE)
  SUBDIRS(CurveCompare)
ENDIF(COMPILE_CURVECOMPARE)

OPTION(COMPILE_DTIAtlasBuilder "Compile DTIAtlasBuilder." OFF)
IF(COMPILE_DTIAtlasBuilder)
  SUBDIRS(DTIAtlasBuilder)
ENDIF(COMPILE_DTIAtlasBuilder)

OPTION(COMPILE_MULTIATLASSEG "Compile MultiAtlasSeg." OFF)
IF(COMPILE_MULTIATLASSEG)
  SUBDIRS(MultiAtlasSeg)
ENDIF(COMPILE_MULTIATLASSEG)

OPTION(COMPILE_TEXTUREBIOMARKERTOOL "Compile TextureBiomarkerTool." OFF)
IF(COMPILE_TEXTUREBIOMARKERTOOL)
  SUBDIRS(TextureBiomarkerTool)
ENDIF(COMPILE_TEXTUREBIOMARKERTOOL)

OPTION(COMPILE_DMDBIOMARKERTOOL "Compile DMDBiomarkerTool." OFF)
IF(COMPILE_DMDBIOMARKERTOOL)
  SUBDIRS(DMDBiomarkerTool)
ENDIF(COMPILE_DMDBIOMARKERTOOL)




